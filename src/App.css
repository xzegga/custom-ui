/*
    Flexbox CSS framework with all necesary classes to work with layouts
    This classes aims at providing a more efficient way to lay out, align and distribute space among items in a container
*/

.flex-it,
.d-flex {
  display: -webkit-flex;
  display: flex;
}

.flex-wrap {
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
}

.flex-row {
  -webkit-flex-direction: row;
  flex-direction: row;
}

.flex-col,
.flex-column {
  -webkit-flex-direction: column;
  flex-direction: column;
}

.flex-item-auto,
.flex-fill {
  -webkit-flex-basis: auto;
  flex-basis: auto;
  flex: 1;
}

/*
  This allows the default alignment (or the one specified by align-items) to be overridden for individual flex items.
  auto | flex-start | flex-end | center | baseline | stretch;
*/

.flex-item-start {
  -webkit-align-self: flex-start;
  align-self: flex-start;
}

.flex-item-end {
  -webkit-align-self: flex-end;
  align-self: flex-end;
}

.flex-item-center {
  -webkit-align-self: center;
  align-self: center;
}

.flex-item-baseline {
  -webkit-align-self: baseline;
  align-self: baseline;
}

.flex-item-stretch {
  -webkit-align-self: stretch;
  align-self: stretch;
}

/*
  This defines the alignment along the main axis.
  It helps distribute extra free space left over when either all the flex items on a line are inflexible,
  or are flexible but have reached their maximum size. It also exerts some control over the alignment
  of items when they overflow the line.
  flex-start | flex-end | center | space-between | space-around | space-evenly;
*/

.flex-content-start,
.justify-content-start {
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
}

.flex-content-end,
.justify-content-end {
  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}

.flex-content-center,
.justify-content-center {
  -webkit-justify-content: center;
  justify-content: center;
}

.flex-content-between,
.justify-content-between {
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

.flex-content-around,
.justify-content-around {
  -webkit-justify-content: space-around;
  justify-content: space-around;
}

.flex-content-evenly {
  -webkit-justify-content: space-evenly;
  justify-content: space-evenly;
}

/*
align-items:
The next classes defines the default behaviour for how flex items are
laid out along the cross axis on the current line.
Think of it as the justify-content version for the cross-axis (perpendicular to the main-axis).
flex-start | flex-end | center | baseline | stretch;
*/

.flex-xcontent-start,
.align-items-start {
  -webkit-align-items: flex-start;
  align-items: flex-start;
}

.flex-xcontent-end,
.align-items-end {
  -webkit-align-items: flex-end;
  align-items: flex-end;
}

.flex-xcontent-center,
.align-items-center {
  -webkit-align-items: center;
  align-items: center;
}

.flex-xcontent-baseline {
  -webkit-align-items: baseline;
  align-items: baseline;
}

.flex-xcontent-stretch,
.align-items-stretch {
  -webkit-align-items: stretch;
  align-items: stretch;
}

/*
  align-content:
  This aligns a flex container's lines within when there is extra space in the cross-axis,
  similar to how justify-content aligns individual items within the main-axis.
  flex-start | flex-end | center | space-between | space-around | stretch;
*/

.flex-xwrap-content-start {
  -webkit-align-content: flex-start;
  align-content: flex-start;
}

.flex-xwrap-content-end {
  -webkit-align-content: flex-end;
  align-content: flex-end;
}

.flex-xwrap-content-center {
  -webkit-align-content: center;
  align-content: center;
}

.flex-xwrap-content-between {
  -webkit-align-content: space-between;
  align-content: space-between;
}

.flex-xwrap-content-around {
  -webkit-align-content: space-around;
  align-content: space-around;
}

.flex-xwrap-content-stretch {
  -webkit-align-content: stretch;
  align-content: stretch;
}

/* CONTENT ITEMS ALIGN */

.flex-2 {
  -webkit-flex-basis: auto;
  flex-basis: auto;
  flex: 2;
}

.flex-3 {
  -webkit-flex-basis: auto;
  flex-basis: auto;
  flex: 3;
}
